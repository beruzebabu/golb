# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Vet code
      run: go vet

    - name: Vulnerability check
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: golb-linux-amd64-${GITHUB_RUN_ID}
        path: golb

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build
      run: docker buildx build -f Dockerfile . -t beruzebabu/golb --label "runnumber=${GITHUB_RUN_ID}" --output type=docker,dest=./golb.tar 

    - name: Upload docker artifact
      uses: actions/upload-artifact@v4
      with:
        name: golb-docker
        path: golb-${GITHUB_RUN_ID}.tar

    - name: Load image
      run: docker load -i ./golb.tar

    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
          IMAGE_ID=ghcr.io/beruzebabu/golb
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag beruzebabu/golb $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION